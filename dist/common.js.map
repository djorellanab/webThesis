{"version":3,"sources":["webpack:///./node_modules/file-saver/dist/fileSaver.js","webpack:///./src/app/app.utils.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA,MAAM,IAA0C;AAChD,IAAI,iCAAO,EAAE,oCAAE,OAAO;AAAA;AAAA;AAAA,oGAAC;AACvB,GAAG,MAAM,YAQN;AACH,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,6EAA6E;AAC7E;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mCAAmC;;AAEnC;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;;AAGH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO,OAAO;;AAEd;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wDAAwD,GAAG,yBAAyB;AACpF,6CAA6C;AAC7C,qBAAqB;AACrB;;AAEA;AACA,KAAK;AACL;AACA;AACA,sCAAsC;AACtC,mBAAmB;;AAEnB;AACA;AACA,OAAO,OAAO;AACd;AACA,GAAG;AACH;;AAEA,MAAM,IAA6B;AACnC;AACA;AACA,CAAC;;;;;;;;;;;;;ACvLD;AAAA;AAAA;AAAA;AAAmD;AAMnD;IAAA;IAmDA,CAAC;IAlDiB,kBAAS,GAAvB,UAAwB,SAAgB,EAAE,IAAW;QACjD,OAAO,CAAC,IAAI,GAAC,CAAC,CAAC,GAAG,SAAS,CAAC;IAChC,CAAC;IAEa,yBAAgB,GAA9B,UAA+B,QAAe;QAC1C,OAAO,QAAQ,CAAC;IACpB,CAAC;IAEa,6BAAoB,GAAlC,UAAmC,cAAqB,EAAE,QAAe;QACrE,IAAI,KAAK,GAAU,cAAc,GAAC,QAAQ,CAAC;QAC3C,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,OAAO,KAAK,CAAC;IACjB,CAAC;IAEa,iBAAQ,GAAtB,UAAuB,WAAiB,EAAE,QAAgB;QACtD,wEAAM,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAClC,CAAC;IAEa,kDAAyC,GAAvD,UAAyD,OAAoB;QACzE,IAAM,kBAAkB,GAAG,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;QACpE,IAAM,OAAO,GAAG,oBAAoB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC9D,IAAM,QAAQ,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,IAAI,EAAE,CAAC;QACnD,OAAO,QAAQ,CAAC;IACpB,CAAC;IAEa,qBAAY,GAA1B,UAA2B,KAAY;QACnC,QAAO,KAAK,EAAC;YACT,KAAK,CAAC,CAAC,CAAC;gBAAE,OAAO,SAAS;aAAC;YAC3B,KAAK,CAAC,CAAC,CAAC;gBAAE,OAAO,SAAS;aAAC;YAC3B,KAAK,CAAC,CAAC,CAAC;gBAAE,OAAO,SAAS;aAAC;YAC3B,KAAK,CAAC,CAAC,CAAC;gBAAE,OAAO,SAAS;aAAC;YAC3B,KAAK,CAAC,CAAC,CAAC;gBAAE,OAAO,SAAS;aAAC;YAC3B,KAAK,CAAC,CAAC,CAAC;gBAAE,OAAO,SAAS;aAAC;YAC3B,KAAK,CAAC,CAAC,CAAC;gBAAE,OAAO,SAAS;aAAC;YAC3B,KAAK,CAAC,CAAC,CAAC;gBAAE,OAAO,SAAS;aAAC;YAC3B,KAAK,CAAC,CAAC,CAAC;gBAAE,OAAO,SAAS;aAAC;YAC3B,KAAK,CAAC,CAAC,CAAC;gBAAE,OAAO,SAAS;aAAC;YAC3B,KAAK,EAAE,CAAC,CAAC;gBAAE,OAAO,SAAS;aAAC;YAC5B,KAAK,EAAE,CAAC,CAAC;gBAAE,OAAO,SAAS;aAAC;YAC5B,KAAK,EAAE,CAAC,CAAC;gBAAE,OAAO,SAAS;aAAC;YAC5B,KAAK,EAAE,CAAC,CAAC;gBAAE,OAAO,SAAS;aAAC;YAC5B,KAAK,EAAE,CAAC,CAAC;gBAAE,OAAO,SAAS;aAAC;YAC5B,KAAK,EAAE,CAAC,CAAC;gBAAE,OAAO,SAAS;aAAC;YAC5B,KAAK,EAAE,CAAC,CAAC;gBAAE,OAAO,SAAS;aAAC;YAC5B,KAAK,EAAE,CAAC,CAAC;gBAAE,OAAO,SAAS;aAAC;YAC5B,KAAK,EAAE,CAAC,CAAC;gBAAE,OAAO,SAAS;aAAC;YAC5B,KAAK,EAAE,CAAC,CAAC;gBAAE,OAAO,SAAS;aAAC;YAC5B,OAAO,CAAC,CAAC;gBAAC,OAAO,SAAS;aAAC;SAC9B;IACL,CAAC;IACL,eAAC;AAAD,CAAC","file":"common.js","sourcesContent":["(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory();\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory();\n    global.FileSaver = mod.exports;\n  }\n})(this, function () {\n  \"use strict\";\n\n  /*\n  * FileSaver.js\n  * A saveAs() FileSaver implementation.\n  *\n  * By Eli Grey, http://eligrey.com\n  *\n  * License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n  * source  : http://purl.eligrey.com/github/FileSaver.js\n  */\n  // The one and only way of getting global scope in all environments\n  // https://stackoverflow.com/q/3277182/1008999\n  var _global = typeof window === 'object' && window.window === window ? window : typeof self === 'object' && self.self === self ? self : typeof global === 'object' && global.global === global ? global : void 0;\n\n  function bom(blob, opts) {\n    if (typeof opts === 'undefined') opts = {\n      autoBom: false\n    };else if (typeof opts !== 'object') {\n      console.warn('Deprecated: Expected third argument to be a object');\n      opts = {\n        autoBom: !opts\n      };\n    } // prepend BOM for UTF-8 XML and text/* types (including HTML)\n    // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\n    if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n      return new Blob([String.fromCharCode(0xFEFF), blob], {\n        type: blob.type\n      });\n    }\n\n    return blob;\n  }\n\n  function download(url, name, opts) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n\n    xhr.onload = function () {\n      saveAs(xhr.response, name, opts);\n    };\n\n    xhr.onerror = function () {\n      console.error('could not download file');\n    };\n\n    xhr.send();\n  }\n\n  function corsEnabled(url) {\n    var xhr = new XMLHttpRequest(); // use sync to avoid popup blocker\n\n    xhr.open('HEAD', url, false);\n\n    try {\n      xhr.send();\n    } catch (e) {}\n\n    return xhr.status >= 200 && xhr.status <= 299;\n  } // `a.click()` doesn't work for all browsers (#465)\n\n\n  function click(node) {\n    try {\n      node.dispatchEvent(new MouseEvent('click'));\n    } catch (e) {\n      var evt = document.createEvent('MouseEvents');\n      evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);\n      node.dispatchEvent(evt);\n    }\n  }\n\n  var saveAs = _global.saveAs || ( // probably in some web worker\n  typeof window !== 'object' || window !== _global ? function saveAs() {}\n  /* noop */\n  // Use download attribute first if possible (#193 Lumia mobile)\n  : 'download' in HTMLAnchorElement.prototype ? function saveAs(blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL;\n    var a = document.createElement('a');\n    name = name || blob.name || 'download';\n    a.download = name;\n    a.rel = 'noopener'; // tabnabbing\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob;\n\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href) ? download(blob, name, opts) : click(a, a.target = '_blank');\n      } else {\n        click(a);\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob);\n      setTimeout(function () {\n        URL.revokeObjectURL(a.href);\n      }, 4E4); // 40s\n\n      setTimeout(function () {\n        click(a);\n      }, 0);\n    }\n  } // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator ? function saveAs(blob, name, opts) {\n    name = name || blob.name || 'download';\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts);\n      } else {\n        var a = document.createElement('a');\n        a.href = blob;\n        a.target = '_blank';\n        setTimeout(function () {\n          click(a);\n        });\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name);\n    }\n  } // Fallback to using FileReader and a popup\n  : function saveAs(blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank');\n\n    if (popup) {\n      popup.document.title = popup.document.body.innerText = 'downloading...';\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts);\n    var force = blob.type === 'application/octet-stream';\n\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari;\n\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent);\n\n    if ((isChromeIOS || force && isSafari) && typeof FileReader === 'object') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader();\n\n      reader.onloadend = function () {\n        var url = reader.result;\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;');\n        if (popup) popup.location.href = url;else location = url;\n        popup = null; // reverse-tabnabbing #460\n      };\n\n      reader.readAsDataURL(blob);\n    } else {\n      var URL = _global.URL || _global.webkitURL;\n      var url = URL.createObjectURL(blob);\n      if (popup) popup.location = url;else location.href = url;\n      popup = null; // reverse-tabnabbing #460\n\n      setTimeout(function () {\n        URL.revokeObjectURL(url);\n      }, 4E4); // 40s\n    }\n  });\n  _global.saveAs = saveAs.saveAs = saveAs;\n\n  if (typeof module !== 'undefined') {\n    module.exports = saveAs;\n  }\n});\n","import { saveAs } from 'file-saver/dist/fileSaver';\r\nimport {md5}from 'md5';\r\nimport { Response } from '@angular/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport {AppConstants} from './app.constants';\r\n\r\nexport class AppUtils {\r\n    public static getOffSet(registers:number, page:number):number{\r\n        return (page-1) * registers;\r\n    }\r\n\r\n    public static getPasswordCrypt(password:string):string{\r\n        return password;\r\n    }\r\n\r\n    public static getTotalPagesByTable(totalRegisters:number, register:number):number{\r\n        let total:number = totalRegisters/register;\r\n        total = Number(total.toFixed(0));\r\n        return total;\r\n    }\r\n\r\n    public static saveFile(blobContent: Blob, fileName: string){\r\n        saveAs(blobContent, fileName);\r\n    }\r\n\r\n    public static getFileNameFromResponseContentDisposition (headers: HttpHeaders):string{\r\n        const contentDisposition = headers.get('content-disposition') || '';\r\n        const matches = /filename=([^;]+)/ig.exec(contentDisposition);\r\n        const fileName = (matches[1] || 'untitled').trim();\r\n        return fileName;\r\n    }\r\n\r\n    public static getColorName(joint:number):string{\r\n        switch(joint){\r\n            case 0: { return \"#8B0000\"}\r\n            case 1: { return \"#FF0000\"}\r\n            case 2: { return \"#FFA07A\"}\r\n            case 3: { return \"#C71585\"}\r\n            case 4: { return \"#FF1493\"}\r\n            case 5: { return \"#FFC0CB\"}\r\n            case 6: { return \"#FF8C00\"}\r\n            case 7: { return \"#FF6347\"}\r\n            case 8: { return \"#AAA07A\"}\r\n            case 9: { return \"#FFFF00\"}\r\n            case 10: { return \"#FFD700\"}\r\n            case 11: { return \"#BDB76B\"}\r\n            case 12: { return \"#EEE8AA\"}\r\n            case 13: { return \"#8A2BE2\"}\r\n            case 14: { return \"#483D8B\"}\r\n            case 15: { return \"#E6E6FA\"}\r\n            case 16: { return \"#EE82EE\"}\r\n            case 17: { return \"#00FA9A\"}\r\n            case 18: { return \"#66CDAA\"}\r\n            case 19: { return \"#9ACD32\"}\r\n            default: {return \"#191970\"}\r\n        }\r\n    }\r\n}"],"sourceRoot":""}